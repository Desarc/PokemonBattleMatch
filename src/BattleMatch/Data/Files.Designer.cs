//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Optimizer.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Files {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Files() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Optimizer.Data.Files", typeof(Files).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{ &quot;name&quot;: &quot;Acid&quot;, &quot;type&quot;: &quot;POISON&quot; },
        ///	{ &quot;name&quot;: &quot;Bite&quot;, &quot;type&quot;: &quot;DARK&quot; },
        ///	{ &quot;name&quot;: &quot;Bubble&quot;, &quot;type&quot;: &quot;WATER&quot; },
        ///	{ &quot;name&quot;: &quot;Bug Bite&quot;, &quot;type&quot;: &quot;BUG&quot; },
        ///	{ &quot;name&quot;: &quot;Bullet Punch&quot;, &quot;type&quot;: &quot;STEEL&quot; },
        ///	{ &quot;name&quot;: &quot;Confusion&quot;, &quot;type&quot;: &quot;PSYCHIC&quot; },
        ///	{ &quot;name&quot;: &quot;Cut&quot;, &quot;type&quot;: &quot;NORMAL&quot; },
        ///	{ &quot;name&quot;: &quot;Dragon Breath&quot;, &quot;type&quot;: &quot;DRAGON&quot; },
        ///	{ &quot;name&quot;: &quot;Ember&quot;, &quot;type&quot;: &quot;FIRE&quot; },
        ///	{ &quot;name&quot;: &quot;Feint Attack&quot;, &quot;type&quot;: &quot;DARK&quot; },
        ///	{ &quot;name&quot;: &quot;Fire Fang&quot;, &quot;type&quot;: &quot;FIRE&quot; },
        ///	{ &quot;name&quot;: &quot;Frost Breath&quot;, &quot;type&quot;: &quot;ICE&quot; [rest of string was truncate....
        /// </summary>
        internal static string FastAttacks {
            get {
                return ResourceManager.GetString("FastAttacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{ 
        ///		&quot;number&quot;: 1,
        ///		&quot;name&quot;: &quot;Bulbasaur&quot;, 
        ///		&quot;firstType&quot;: &quot;GRASS&quot;,
        ///		&quot;secondType&quot;: &quot;POISON&quot;,
        ///		&quot;fastAttacks&quot;: [ &quot;Tackle&quot;, &quot;Vine Whip&quot; ],
        ///		&quot;specialAttacks&quot;: [ &quot;Sludge Bomb&quot;, &quot;Seed Bomb&quot;, &quot;Power Whip&quot; ]
        ///	},
        ///	{ 
        ///		&quot;number&quot;: 2,
        ///		&quot;name&quot;: &quot;Ivysaur&quot;, 
        ///		&quot;firstType&quot;: &quot;GRASS&quot;,
        ///		&quot;secondType&quot;: &quot;POISON&quot;,
        ///		&quot;fastAttacks&quot;: [ &quot;Razor Leaf&quot;, &quot;Vine Whip&quot; ],
        ///		&quot;specialAttacks&quot;: [ &quot;Sludge Bomb&quot;, &quot;Solar Beam&quot;, &quot;Power Whip&quot; ]
        ///	},
        ///	{ 
        ///		&quot;number&quot;: 3,
        ///		&quot;name&quot;: &quot;Venusaur&quot;, 
        ///		&quot;firstType&quot;: &quot;GRASS&quot;,
        ///		&quot;secon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PokemonTemplates {
            get {
                return ResourceManager.GetString("PokemonTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{ &quot;name&quot;: &quot;Aerial Ace&quot;, &quot;type&quot;: &quot;FLYING&quot; },
        ///	{ &quot;name&quot;: &quot;Air Cutter&quot;, &quot;type&quot;: &quot;FLYING&quot; },
        ///	{ &quot;name&quot;: &quot;Ancient Power&quot;, &quot;type&quot;: &quot;ROCK&quot; },
        ///	{ &quot;name&quot;: &quot;Aqua Jet&quot;, &quot;type&quot;: &quot;WATER&quot; },
        ///	{ &quot;name&quot;: &quot;Aqua Tail&quot;, &quot;type&quot;: &quot;WATER&quot; },
        ///	{ &quot;name&quot;: &quot;Blizzard&quot;, &quot;type&quot;: &quot;ICE&quot; },
        ///	{ &quot;name&quot;: &quot;Body Slam&quot;, &quot;type&quot;: &quot;NORMAL&quot; },
        ///	{ &quot;name&quot;: &quot;Bone Club&quot;, &quot;type&quot;: &quot;GROUND&quot; },
        ///	{ &quot;name&quot;: &quot;Brick Break&quot;, &quot;type&quot;: &quot;FIGHTING&quot; },
        ///	{ &quot;name&quot;: &quot;Brine&quot;, &quot;type&quot;: &quot;WATER&quot; },
        ///	{ &quot;name&quot;: &quot;Bubble Beam&quot;, &quot;type&quot;: &quot;WATER&quot; },
        ///	{ &quot;name&quot;: &quot;Bug B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpecialAttacks {
            get {
                return ResourceManager.GetString("SpecialAttacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{ 
        ///		&quot;attackingType&quot;: &quot;NORMAL&quot;,
        ///		&quot;Matchups&quot;: [ 
        ///			{ &quot;defendingType&quot;: &quot;NORMAL&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;FIRE&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;WATER&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;ELECTRIC&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;GRASS&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;ICE&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;FIGHTING&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;POISON&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;defendingType&quot;: &quot;GROUND&quot;, &quot;modifier&quot;: 1 },
        ///			{ &quot;def [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TypeMathcups {
            get {
                return ResourceManager.GetString("TypeMathcups", resourceCulture);
            }
        }
    }
}
